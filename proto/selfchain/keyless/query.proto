syntax = "proto3";

package selfchain.keyless;

option go_package = "selfchain/x/keyless/types";

import "cosmos/base/query/v1beta1/pagination.proto";
import "google/api/annotations.proto";
import "selfchain/keyless/audit.proto";
import "selfchain/keyless/rotation.proto";
import "selfchain/keyless/wallet.proto";
import "gogoproto/gogo.proto";
import "selfchain/keyless/params.proto";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/selfchain/keyless/params";
  }

  // Queries a wallet by ID.
  rpc Wallet(QueryWalletRequest) returns (QueryWalletResponse) {
    option (google.api.http).get = "/selfchain/keyless/wallet/{id}";
  }

  // Queries a list of Wallets items.
  rpc ListWallets(QueryListWalletsRequest) returns (QueryListWalletsResponse) {
    option (google.api.http).get = "/selfchain/keyless/wallets";
  }

  // Queries a key rotation by wallet ID and version.
  rpc KeyRotation(QueryKeyRotationRequest) returns (QueryKeyRotationResponse) {
    option (google.api.http).get = "/selfchain/keyless/key_rotation/{wallet_id}/{version}";
  }

  // Queries a list of key rotations.
  rpc KeyRotations(QueryKeyRotationsRequest) returns (QueryKeyRotationsResponse) {
    option (google.api.http).get = "/selfchain/keyless/key_rotations/{wallet_id}";
  }

  // Queries a list of AuditEvents items.
  rpc ListAuditEvents(QueryListAuditEventsRequest) returns (QueryListAuditEventsResponse) {
    option (google.api.http).get = "/selfchain/keyless/audit_events";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryWalletRequest is request type for the Query/Wallet RPC method.
message QueryWalletRequest {
  string id = 1;
}

// QueryWalletResponse is response type for the Query/Wallet RPC method.
message QueryWalletResponse {
  Wallet wallet = 1 [(gogoproto.nullable) = false];
}

// QueryListWalletsRequest is request type for the Query/ListWallets method.
message QueryListWalletsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryListWalletsResponse is response type for the Query/ListWallets method.
message QueryListWalletsResponse {
  repeated Wallet wallets = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryKeyRotationRequest is request type for the Query/KeyRotation RPC method.
message QueryKeyRotationRequest {
  string wallet_id = 1;
  uint64 version = 2;
}

// QueryKeyRotationResponse is response type for the Query/KeyRotation RPC method.
message QueryKeyRotationResponse {
  KeyRotation rotation = 1 [(gogoproto.nullable) = false];
}

// QueryKeyRotationsRequest is request type for the Query/KeyRotations RPC method.
message QueryKeyRotationsRequest {
  string wallet_id = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryKeyRotationsResponse is response type for the Query/KeyRotations RPC method.
message QueryKeyRotationsResponse {
  repeated KeyRotation rotations = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryListAuditEventsRequest is request type for the Query/ListAuditEvents method.
message QueryListAuditEventsRequest {
  string wallet_id = 1;
  string event_type = 2;
  bool success = 3;
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

// QueryListAuditEventsResponse is response type for the Query/ListAuditEvents method.
message QueryListAuditEventsResponse {
  repeated AuditEvent events = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}