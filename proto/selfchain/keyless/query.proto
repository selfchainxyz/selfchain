syntax = "proto3";
package selfchain.keyless;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "selfchain/keyless/params.proto";
import "selfchain/keyless/keygen.proto";
import "selfchain/keyless/wallet.proto";
import "selfchain/keyless/rotation.proto";
import "selfchain/keyless/audit.proto";

option go_package = "selfchain/x/keyless/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/selfchain/keyless/params";
  }

  // Wallet queries a wallet by address
  rpc Wallet(QueryWalletRequest) returns (QueryWalletResponse) {
    option (google.api.http).get = "/selfchain/keyless/wallet/{address}";
  }

  // Wallets queries all wallets
  rpc Wallets(QueryWalletsRequest) returns (QueryWalletsResponse) {
    option (google.api.http).get = "/selfchain/keyless/wallets";
  }

  // PartyData queries TSS party data for a wallet
  rpc PartyData(QueryPartyDataRequest) returns (QueryPartyDataResponse) {
    option (google.api.http).get = "/selfchain/keyless/party_data/{wallet_address}";
  }

  // KeyRotation queries a specific key rotation by wallet ID and version
  rpc KeyRotation(QueryKeyRotationRequest) returns (QueryKeyRotationResponse) {
    option (google.api.http).get = "/selfchain/keyless/key_rotation/{wallet_id}/{version}";
  }

  // KeyRotations queries all key rotations for a wallet
  rpc KeyRotations(QueryKeyRotationsRequest) returns (QueryKeyRotationsResponse) {
    option (google.api.http).get = "/selfchain/keyless/key_rotations/{wallet_id}";
  }

  // ListAuditEvents queries audit events for a wallet with filtering
  rpc ListAuditEvents(QueryListAuditEventsRequest) returns (QueryListAuditEventsResponse) {
    option (google.api.http).get = "/selfchain/keyless/audit_events/{wallet_id}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryWalletRequest is request type for the Query/Wallet RPC method.
message QueryWalletRequest {
  string address = 1;
}

// QueryWalletResponse is response type for the Query/Wallet RPC method.
message QueryWalletResponse {
  Wallet wallet = 1;
}

// QueryWalletsRequest is request type for the Query/Wallets RPC method.
message QueryWalletsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryWalletsResponse is response type for the Query/Wallets RPC method.
message QueryWalletsResponse {
  repeated Wallet wallets = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryPartyDataRequest is request type for the Query/PartyData RPC method.
message QueryPartyDataRequest {
  string wallet_address = 1;
}

// QueryPartyDataResponse is response type for the Query/PartyData RPC method.
message QueryPartyDataResponse {
  string wallet_address = 1;
  PartyData party_data = 2;
}

// QueryKeyRotationRequest is request type for the Query/KeyRotation RPC method.
message QueryKeyRotationRequest {
  string wallet_id = 1;
  uint64 version = 2;
}

// QueryKeyRotationResponse is response type for the Query/KeyRotation RPC method.
message QueryKeyRotationResponse {
  KeyRotation rotation = 1 [(gogoproto.nullable) = true];
}

// QueryKeyRotationsRequest is request type for the Query/KeyRotations RPC method.
message QueryKeyRotationsRequest {
  string wallet_id = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryKeyRotationsResponse is response type for the Query/KeyRotations RPC method.
message QueryKeyRotationsResponse {
  repeated KeyRotation rotations = 1 [(gogoproto.nullable) = true];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryListAuditEventsRequest is request type for the Query/ListAuditEvents RPC method.
message QueryListAuditEventsRequest {
  string wallet_id = 1;
  string event_type = 2;
  bool success = 3;
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

// QueryListAuditEventsResponse is response type for the Query/ListAuditEvents RPC method.
message QueryListAuditEventsResponse {
  repeated AuditEvent events = 1 [(gogoproto.nullable) = true];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}