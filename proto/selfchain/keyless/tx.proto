syntax = "proto3";

package selfchain.keyless;

option go_package = "selfchain/x/keyless/types";

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

// Msg defines the Msg service.
service Msg {
  rpc CreateWallet(MsgCreateWallet) returns (MsgCreateWalletResponse);
  rpc RecoverWallet(MsgRecoverWallet) returns (MsgRecoverWalletResponse);
  rpc SignTransaction(MsgSignTransaction) returns (MsgSignTransactionResponse);
}

message MsgCreateWallet {
  option (cosmos.msg.v1.signer) = "creator";
  
  string creator = 1;
  string pubKey = 2;
  string walletAddress = 3;
  string chainId = 4;
}

message MsgCreateWalletResponse {
  string walletAddress = 1;
}

message MsgRecoverWallet {
  option (cosmos.msg.v1.signer) = "creator";
  
  string creator = 1;
  string walletAddress = 2;
  string recoveryProof = 3;
  string newPubKey = 4;
}

message MsgRecoverWalletResponse {
  string walletAddress = 1;
}

message MsgSignTransaction {
  option (cosmos.msg.v1.signer) = "creator";
  
  string creator = 1;
  string walletAddress = 2;
  string unsignedTx = 3;
  string chainId = 4;
}

message MsgSignTransactionResponse {
  string signedTx = 1;
}