syntax = "proto3";

package selfchain.keyless;

option go_package = "selfchain/x/keyless/types";

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

// Msg defines the Msg service.
service Msg {
  rpc CreateWallet (MsgCreateWallet) returns (MsgCreateWalletResponse);
  rpc SignTransaction (MsgSignTransaction) returns (MsgSignTransactionResponse);
  rpc RecoverWallet (MsgRecoverWallet) returns (MsgRecoverWalletResponse);
  rpc GenerateKey (MsgGenerateKey) returns (MsgGenerateKeyResponse);
}

message MsgCreateWallet {
  option (cosmos.msg.v1.signer) = "creator";
  
  string creator = 1;
  string did = 2;
}

message MsgCreateWalletResponse {
  string address = 1;
}

message MsgSignTransaction {
  option (cosmos.msg.v1.signer) = "creator";
  
  string creator = 1;
  string wallet_address = 2;
  bytes transaction_data = 3;
  bytes personal_share = 4;
  bytes signature_metadata = 5;
}

message MsgSignTransactionResponse {
  bytes signature = 1;
}

message MsgRecoverWallet {
  option (cosmos.msg.v1.signer) = "creator";
  
  string creator = 1;
  string did = 2;
}

message MsgRecoverWalletResponse {
  string address = 1;
}

message MsgGenerateKey {
  option (cosmos.msg.v1.signer) = "creator";
  
  string creator = 1;
  string wallet_address = 2;
  string chain_id = 3;
}

message MsgGenerateKeyResponse {
  bytes personal_share = 1;
  bytes public_key = 2;
}