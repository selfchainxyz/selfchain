syntax = "proto3";
package selfchain.keyless;

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "selfchain/keyless/batch_sign.proto";
import "selfchain/keyless/key_rotation.proto";

option go_package = "selfchain/x/keyless/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc CreateWallet(MsgCreateWallet) returns (MsgCreateWalletResponse);
  
  rpc SignTransaction(MsgSignTransaction) returns (MsgSignTransactionResponse);

  rpc BatchSign(MsgBatchSignRequest) returns (MsgBatchSignResponse);

  rpc InitiateKeyRotation(MsgInitiateKeyRotation) returns (MsgInitiateKeyRotationResponse);

  rpc CompleteKeyRotation(MsgCompleteKeyRotation) returns (MsgCompleteKeyRotationResponse);

  rpc RecoverWallet(MsgRecoverWallet) returns (MsgRecoverWalletResponse);
}

// MsgCreateWallet represents a message to create a new wallet
message MsgCreateWallet {
  string creator = 1;
  string pub_key = 2;
  string wallet_address = 3;
  string chain_id = 4;
}

// MsgCreateWalletResponse is the response type for the CreateWallet RPC method
message MsgCreateWalletResponse {
  string wallet_address = 1;
}

// MsgSignTransaction represents a message to sign a transaction
message MsgSignTransaction {
  string creator = 1;
  string wallet_address = 2;
  string unsigned_tx = 3;
  string chain_id = 4;
}

// MsgSignTransactionResponse is the response type for the SignTransaction RPC method
message MsgSignTransactionResponse {
  string signed_tx = 1;
}

// MsgInitiateKeyRotation represents a message to initiate key rotation
message MsgInitiateKeyRotation {
  string creator = 1;
  string wallet_address = 2;
  string new_pub_key = 3;
  string signature = 4;
}

// MsgInitiateKeyRotationResponse is the response type for the InitiateKeyRotation RPC method
message MsgInitiateKeyRotationResponse {
  string wallet_address = 1;
  uint32 new_version = 2;
}

// MsgCompleteKeyRotation represents a message to complete key rotation
message MsgCompleteKeyRotation {
  string creator = 1;
  string wallet_address = 2;
  string version = 3;
  string signature = 4;
  string new_pub_key = 5;
}

// MsgCompleteKeyRotationResponse is the response type for the CompleteKeyRotation RPC method
message MsgCompleteKeyRotationResponse {
  string wallet_address = 1;
  string version = 2;
}

// MsgRecoverWallet represents a message to recover a wallet
message MsgRecoverWallet {
  string creator = 1;
  string wallet_address = 2;
  string new_pub_key = 3;
  string recovery_proof = 4;
}

// MsgRecoverWalletResponse is the response type for the RecoverWallet RPC method
message MsgRecoverWalletResponse {
  string wallet_address = 1;
}