syntax = "proto3";
package selfchain.identity;

option go_package = "selfchain/x/identity/types";

import "gogoproto/gogo.proto";
import "selfchain/identity/did_document.proto";
import "selfchain/identity/credential.proto";
import "selfchain/identity/oauth.proto";

// Msg defines the Msg service.
service Msg {
  rpc CreateDID(MsgCreateDID) returns (MsgCreateDIDResponse);
  rpc UpdateDID(MsgUpdateDID) returns (MsgUpdateDIDResponse);
  rpc CreateCredential(MsgCreateCredential) returns (MsgCreateCredentialResponse);
  rpc RevokeCredential(MsgRevokeCredential) returns (MsgRevokeCredentialResponse);
  rpc LinkSocialIdentity(MsgLinkSocialIdentity) returns (MsgLinkSocialIdentityResponse);
}

message MsgCreateDID {
  string did = 1;
  repeated VerificationMethod verification_methods = 2;
  repeated string authentication = 3;
}

message MsgCreateDIDResponse {}

message MsgUpdateDID {
  string did = 1;
  repeated VerificationMethod verification_methods = 2;
  repeated string authentication = 3;
}

message MsgUpdateDIDResponse {}

message MsgCreateCredential {
  string id = 1;
  string issuer = 2;
  string subject = 3;
  map<string, string> claims = 4;
  string schema_id = 5;
}

message MsgCreateCredentialResponse {}

message MsgRevokeCredential {
  string id = 1;
  string issuer = 2;
}

message MsgRevokeCredentialResponse {}

message MsgLinkSocialIdentity {
  string did = 1;
  string provider = 2;
  string token = 3;
}

message MsgLinkSocialIdentityResponse {}