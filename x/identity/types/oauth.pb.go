// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: selfchain/identity/oauth.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// SocialIdentity represents a user's identity from a social provider
type SocialIdentity struct {
	Id         string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Did        string            `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Provider   string            `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	Email      string            `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Name       string            `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	VerifiedAt time.Time         `protobuf:"bytes,6,opt,name=verified_at,json=verifiedAt,proto3,stdtime" json:"verified_at"`
	Metadata   map[string]string `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Verified   bool              `protobuf:"varint,8,opt,name=verified,proto3" json:"verified,omitempty"`
	Created    *time.Time        `protobuf:"bytes,9,opt,name=created,proto3,stdtime" json:"created,omitempty"`
}

func (m *SocialIdentity) Reset()         { *m = SocialIdentity{} }
func (m *SocialIdentity) String() string { return proto.CompactTextString(m) }
func (*SocialIdentity) ProtoMessage()    {}
func (*SocialIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_1afd7a74b0bde80a, []int{0}
}
func (m *SocialIdentity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SocialIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SocialIdentity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SocialIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SocialIdentity.Merge(m, src)
}
func (m *SocialIdentity) XXX_Size() int {
	return m.Size()
}
func (m *SocialIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_SocialIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_SocialIdentity proto.InternalMessageInfo

func (m *SocialIdentity) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SocialIdentity) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *SocialIdentity) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *SocialIdentity) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SocialIdentity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SocialIdentity) GetVerifiedAt() time.Time {
	if m != nil {
		return m.VerifiedAt
	}
	return time.Time{}
}

func (m *SocialIdentity) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *SocialIdentity) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *SocialIdentity) GetCreated() *time.Time {
	if m != nil {
		return m.Created
	}
	return nil
}

// QuerySocialIdentityRequest is the request type for querying a social identity
type QuerySocialIdentityRequest struct {
	Did      string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	Provider string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (m *QuerySocialIdentityRequest) Reset()         { *m = QuerySocialIdentityRequest{} }
func (m *QuerySocialIdentityRequest) String() string { return proto.CompactTextString(m) }
func (*QuerySocialIdentityRequest) ProtoMessage()    {}
func (*QuerySocialIdentityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1afd7a74b0bde80a, []int{1}
}
func (m *QuerySocialIdentityRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySocialIdentityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySocialIdentityRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySocialIdentityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySocialIdentityRequest.Merge(m, src)
}
func (m *QuerySocialIdentityRequest) XXX_Size() int {
	return m.Size()
}
func (m *QuerySocialIdentityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySocialIdentityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySocialIdentityRequest proto.InternalMessageInfo

func (m *QuerySocialIdentityRequest) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *QuerySocialIdentityRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

// QuerySocialIdentityResponse is the response type for the social identity query
type QuerySocialIdentityResponse struct {
	Identity SocialIdentity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity"`
}

func (m *QuerySocialIdentityResponse) Reset()         { *m = QuerySocialIdentityResponse{} }
func (m *QuerySocialIdentityResponse) String() string { return proto.CompactTextString(m) }
func (*QuerySocialIdentityResponse) ProtoMessage()    {}
func (*QuerySocialIdentityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1afd7a74b0bde80a, []int{2}
}
func (m *QuerySocialIdentityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySocialIdentityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySocialIdentityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySocialIdentityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySocialIdentityResponse.Merge(m, src)
}
func (m *QuerySocialIdentityResponse) XXX_Size() int {
	return m.Size()
}
func (m *QuerySocialIdentityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySocialIdentityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySocialIdentityResponse proto.InternalMessageInfo

func (m *QuerySocialIdentityResponse) GetIdentity() SocialIdentity {
	if m != nil {
		return m.Identity
	}
	return SocialIdentity{}
}

// QueryLinkedDIDRequest is the request type for querying a DID linked to a social identity
type QueryLinkedDIDRequest struct {
	Provider string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	SocialId string `protobuf:"bytes,2,opt,name=social_id,json=socialId,proto3" json:"social_id,omitempty"`
}

func (m *QueryLinkedDIDRequest) Reset()         { *m = QueryLinkedDIDRequest{} }
func (m *QueryLinkedDIDRequest) String() string { return proto.CompactTextString(m) }
func (*QueryLinkedDIDRequest) ProtoMessage()    {}
func (*QueryLinkedDIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1afd7a74b0bde80a, []int{3}
}
func (m *QueryLinkedDIDRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryLinkedDIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryLinkedDIDRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryLinkedDIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryLinkedDIDRequest.Merge(m, src)
}
func (m *QueryLinkedDIDRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryLinkedDIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryLinkedDIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryLinkedDIDRequest proto.InternalMessageInfo

func (m *QueryLinkedDIDRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *QueryLinkedDIDRequest) GetSocialId() string {
	if m != nil {
		return m.SocialId
	}
	return ""
}

// QueryLinkedDIDResponse is the response type for the linked DID query
type QueryLinkedDIDResponse struct {
	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
}

func (m *QueryLinkedDIDResponse) Reset()         { *m = QueryLinkedDIDResponse{} }
func (m *QueryLinkedDIDResponse) String() string { return proto.CompactTextString(m) }
func (*QueryLinkedDIDResponse) ProtoMessage()    {}
func (*QueryLinkedDIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1afd7a74b0bde80a, []int{4}
}
func (m *QueryLinkedDIDResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryLinkedDIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryLinkedDIDResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryLinkedDIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryLinkedDIDResponse.Merge(m, src)
}
func (m *QueryLinkedDIDResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryLinkedDIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryLinkedDIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryLinkedDIDResponse proto.InternalMessageInfo

func (m *QueryLinkedDIDResponse) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func init() {
	proto.RegisterType((*SocialIdentity)(nil), "selfchain.identity.SocialIdentity")
	proto.RegisterMapType((map[string]string)(nil), "selfchain.identity.SocialIdentity.MetadataEntry")
	proto.RegisterType((*QuerySocialIdentityRequest)(nil), "selfchain.identity.QuerySocialIdentityRequest")
	proto.RegisterType((*QuerySocialIdentityResponse)(nil), "selfchain.identity.QuerySocialIdentityResponse")
	proto.RegisterType((*QueryLinkedDIDRequest)(nil), "selfchain.identity.QueryLinkedDIDRequest")
	proto.RegisterType((*QueryLinkedDIDResponse)(nil), "selfchain.identity.QueryLinkedDIDResponse")
}

func init() { proto.RegisterFile("selfchain/identity/oauth.proto", fileDescriptor_1afd7a74b0bde80a) }

var fileDescriptor_1afd7a74b0bde80a = []byte{
	// 476 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xce, 0x3a, 0x69, 0xeb, 0x4c, 0x44, 0x85, 0x56, 0x05, 0x59, 0xae, 0xe4, 0x44, 0x3e, 0x45,
	0x1c, 0x6c, 0x14, 0x38, 0xa0, 0x72, 0x22, 0x4a, 0x0f, 0x45, 0x45, 0x02, 0xc3, 0x89, 0x4b, 0xb5,
	0xcd, 0x4e, 0xd2, 0x55, 0x6d, 0xaf, 0xb1, 0xd7, 0x11, 0x7e, 0x8b, 0x3e, 0x03, 0x4f, 0xd3, 0x63,
	0x8f, 0x9c, 0x00, 0x25, 0x2f, 0x82, 0xbc, 0xfe, 0x69, 0xd3, 0x56, 0xea, 0x6d, 0x66, 0x67, 0xe7,
	0x9b, 0x6f, 0xbe, 0x6f, 0x17, 0x9c, 0x0c, 0xc3, 0xc5, 0xfc, 0x82, 0x89, 0xd8, 0x17, 0x1c, 0x63,
	0x25, 0x54, 0xe1, 0x4b, 0x96, 0xab, 0x0b, 0x2f, 0x49, 0xa5, 0x92, 0x94, 0xb6, 0x75, 0xaf, 0xa9,
	0xdb, 0x07, 0x4b, 0xb9, 0x94, 0xba, 0xec, 0x97, 0x51, 0x75, 0xd3, 0x1e, 0x2e, 0xa5, 0x5c, 0x86,
	0xe8, 0xeb, 0xec, 0x3c, 0x5f, 0xf8, 0x4a, 0x44, 0x98, 0x29, 0x16, 0x25, 0xd5, 0x05, 0xf7, 0x57,
	0x17, 0xf6, 0xbf, 0xca, 0xb9, 0x60, 0xe1, 0x49, 0x8d, 0x44, 0xf7, 0xc1, 0x10, 0xdc, 0x22, 0x23,
	0x32, 0xee, 0x07, 0x86, 0xe0, 0xf4, 0x39, 0x74, 0xb9, 0xe0, 0x96, 0xa1, 0x0f, 0xca, 0x90, 0xda,
	0x60, 0x26, 0xa9, 0x5c, 0x09, 0x8e, 0xa9, 0xd5, 0xd5, 0xc7, 0x6d, 0x4e, 0x0f, 0x60, 0x07, 0x23,
	0x26, 0x42, 0xab, 0xa7, 0x0b, 0x55, 0x42, 0x29, 0xf4, 0x62, 0x16, 0xa1, 0xb5, 0xa3, 0x0f, 0x75,
	0x4c, 0x8f, 0x61, 0xb0, 0xc2, 0x54, 0x2c, 0x04, 0xf2, 0x33, 0xa6, 0xac, 0xdd, 0x11, 0x19, 0x0f,
	0x26, 0xb6, 0x57, 0x31, 0xf6, 0x1a, 0xc6, 0xde, 0xb7, 0x86, 0xf1, 0xd4, 0xbc, 0xfe, 0x33, 0xec,
	0x5c, 0xfd, 0x1d, 0x92, 0x00, 0x9a, 0xc6, 0x0f, 0x8a, 0x9e, 0x82, 0x19, 0xa1, 0x62, 0x9c, 0x29,
	0x66, 0xed, 0x8d, 0xba, 0xe3, 0xc1, 0xe4, 0xb5, 0xf7, 0x50, 0x1f, 0x6f, 0x7b, 0x49, 0xef, 0x53,
	0xdd, 0x72, 0x1c, 0xab, 0xb4, 0x08, 0x5a, 0x84, 0x72, 0xb5, 0x06, 0xdb, 0x32, 0x47, 0x64, 0x6c,
	0x06, 0x6d, 0x4e, 0x8f, 0x60, 0x6f, 0x9e, 0x22, 0x53, 0xc8, 0xad, 0xfe, 0x93, 0x64, 0x7b, 0x9a,
	0x68, 0xd3, 0x60, 0xbf, 0x87, 0x67, 0x5b, 0x23, 0x4b, 0x55, 0x2f, 0xb1, 0xa8, 0x65, 0x2e, 0xc3,
	0x52, 0xb9, 0x15, 0x0b, 0x73, 0xac, 0x95, 0xae, 0x92, 0x23, 0xe3, 0x1d, 0x71, 0x3f, 0x82, 0xfd,
	0x25, 0xc7, 0xb4, 0xd8, 0xde, 0x21, 0xc0, 0x1f, 0x39, 0x66, 0xaa, 0xf1, 0x87, 0x3c, 0xee, 0x8f,
	0xb1, 0xed, 0x8f, 0x3b, 0x87, 0xc3, 0x47, 0xb1, 0xb2, 0x44, 0xc6, 0x19, 0xd2, 0x19, 0x98, 0x8d,
	0x64, 0x1a, 0x71, 0x30, 0x71, 0x9f, 0x56, 0x73, 0xda, 0x2b, 0x9d, 0x09, 0xda, 0x4e, 0xf7, 0x33,
	0xbc, 0xd0, 0x43, 0x4e, 0x45, 0x7c, 0x89, 0x7c, 0x76, 0x32, 0x6b, 0xb8, 0xde, 0x65, 0x46, 0xee,
	0xbd, 0x9c, 0x43, 0xe8, 0x67, 0x1a, 0xf6, 0xac, 0x7d, 0x6d, 0x66, 0x56, 0xcf, 0x71, 0x5f, 0xc1,
	0xcb, 0xfb, 0x88, 0x35, 0xe3, 0x07, 0xeb, 0x4f, 0xdf, 0x5e, 0xaf, 0x1d, 0x72, 0xb3, 0x76, 0xc8,
	0xbf, 0xb5, 0x43, 0xae, 0x36, 0x4e, 0xe7, 0x66, 0xe3, 0x74, 0x7e, 0x6f, 0x9c, 0xce, 0x77, 0xfb,
	0xf6, 0x63, 0xfd, 0xbc, 0xfd, 0x5a, 0xaa, 0x48, 0x30, 0x3b, 0xdf, 0xd5, 0x26, 0xbe, 0xf9, 0x1f,
	0x00, 0x00, 0xff, 0xff, 0x87, 0x93, 0x32, 0x47, 0x7d, 0x03, 0x00, 0x00,
}

func (m *SocialIdentity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SocialIdentity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SocialIdentity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Created != nil {
		n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.Created, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Created):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintOauth(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x4a
	}
	if m.Verified {
		i--
		if m.Verified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.Metadata) > 0 {
		for k := range m.Metadata {
			v := m.Metadata[k]
			baseI := i
			i -= len(v)
			copy(dAtA[i:], v)
			i = encodeVarintOauth(dAtA, i, uint64(len(v)))
			i--
			dAtA[i] = 0x12
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintOauth(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintOauth(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x3a
		}
	}
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.VerifiedAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.VerifiedAt):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintOauth(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x32
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuerySocialIdentityRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySocialIdentityRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySocialIdentityRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuerySocialIdentityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySocialIdentityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySocialIdentityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Identity.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintOauth(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryLinkedDIDRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryLinkedDIDRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryLinkedDIDRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SocialId) > 0 {
		i -= len(m.SocialId)
		copy(dAtA[i:], m.SocialId)
		i = encodeVarintOauth(dAtA, i, uint64(len(m.SocialId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryLinkedDIDResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryLinkedDIDResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryLinkedDIDResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintOauth(dAtA []byte, offset int, v uint64) int {
	offset -= sovOauth(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SocialIdentity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.VerifiedAt)
	n += 1 + l + sovOauth(uint64(l))
	if len(m.Metadata) > 0 {
		for k, v := range m.Metadata {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovOauth(uint64(len(k))) + 1 + len(v) + sovOauth(uint64(len(v)))
			n += mapEntrySize + 1 + sovOauth(uint64(mapEntrySize))
		}
	}
	if m.Verified {
		n += 2
	}
	if m.Created != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Created)
		n += 1 + l + sovOauth(uint64(l))
	}
	return n
}

func (m *QuerySocialIdentityRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	return n
}

func (m *QuerySocialIdentityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Identity.Size()
	n += 1 + l + sovOauth(uint64(l))
	return n
}

func (m *QueryLinkedDIDRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.SocialId)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	return n
}

func (m *QueryLinkedDIDResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	return n
}

func sovOauth(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozOauth(x uint64) (n int) {
	return sovOauth(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SocialIdentity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SocialIdentity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SocialIdentity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.VerifiedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metadata == nil {
				m.Metadata = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowOauth
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowOauth
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthOauth
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthOauth
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowOauth
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthOauth
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return ErrInvalidLengthOauth
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipOauth(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthOauth
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Metadata[mapkey] = mapvalue
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Verified = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Created == nil {
				m.Created = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.Created, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOauth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthOauth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuerySocialIdentityRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySocialIdentityRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySocialIdentityRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOauth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthOauth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuerySocialIdentityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySocialIdentityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySocialIdentityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Identity", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Identity.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOauth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthOauth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryLinkedDIDRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryLinkedDIDRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryLinkedDIDRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SocialId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SocialId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOauth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthOauth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryLinkedDIDResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryLinkedDIDResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryLinkedDIDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOauth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOauth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthOauth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipOauth(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthOauth
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupOauth
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthOauth
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthOauth        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOauth          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupOauth = fmt.Errorf("proto: unexpected end of group")
)
