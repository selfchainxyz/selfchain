// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: selfchain/identity/recovery.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// RecoverySession represents an active wallet recovery session
type RecoverySession struct {
	Id               string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Did              string    `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	SocialProvider   string    `protobuf:"bytes,3,opt,name=social_provider,json=socialProvider,proto3" json:"social_provider,omitempty"`
	SocialId         string    `protobuf:"bytes,4,opt,name=social_id,json=socialId,proto3" json:"social_id,omitempty"`
	MfaVerified      bool      `protobuf:"varint,5,opt,name=mfa_verified,json=mfaVerified,proto3" json:"mfa_verified,omitempty"`
	IdentityVerified bool      `protobuf:"varint,6,opt,name=identity_verified,json=identityVerified,proto3" json:"identity_verified,omitempty"`
	RecoveryData     []byte    `protobuf:"bytes,7,opt,name=recovery_data,json=recoveryData,proto3" json:"recovery_data,omitempty"`
	ExpiresAt        time.Time `protobuf:"bytes,8,opt,name=expires_at,json=expiresAt,proto3,stdtime" json:"expires_at"`
	CreatedAt        time.Time `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at"`
}

func (m *RecoverySession) Reset()         { *m = RecoverySession{} }
func (m *RecoverySession) String() string { return proto.CompactTextString(m) }
func (*RecoverySession) ProtoMessage()    {}
func (*RecoverySession) Descriptor() ([]byte, []int) {
	return fileDescriptor_981d47066cbe0878, []int{0}
}
func (m *RecoverySession) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RecoverySession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RecoverySession.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RecoverySession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecoverySession.Merge(m, src)
}
func (m *RecoverySession) XXX_Size() int {
	return m.Size()
}
func (m *RecoverySession) XXX_DiscardUnknown() {
	xxx_messageInfo_RecoverySession.DiscardUnknown(m)
}

var xxx_messageInfo_RecoverySession proto.InternalMessageInfo

func (m *RecoverySession) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RecoverySession) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *RecoverySession) GetSocialProvider() string {
	if m != nil {
		return m.SocialProvider
	}
	return ""
}

func (m *RecoverySession) GetSocialId() string {
	if m != nil {
		return m.SocialId
	}
	return ""
}

func (m *RecoverySession) GetMfaVerified() bool {
	if m != nil {
		return m.MfaVerified
	}
	return false
}

func (m *RecoverySession) GetIdentityVerified() bool {
	if m != nil {
		return m.IdentityVerified
	}
	return false
}

func (m *RecoverySession) GetRecoveryData() []byte {
	if m != nil {
		return m.RecoveryData
	}
	return nil
}

func (m *RecoverySession) GetExpiresAt() time.Time {
	if m != nil {
		return m.ExpiresAt
	}
	return time.Time{}
}

func (m *RecoverySession) GetCreatedAt() time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return time.Time{}
}

// MsgInitiateRecovery represents the message to start wallet recovery
type MsgInitiateRecovery struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SocialProvider string `protobuf:"bytes,2,opt,name=social_provider,json=socialProvider,proto3" json:"social_provider,omitempty"`
	OauthToken     string `protobuf:"bytes,3,opt,name=oauth_token,json=oauthToken,proto3" json:"oauth_token,omitempty"`
}

func (m *MsgInitiateRecovery) Reset()         { *m = MsgInitiateRecovery{} }
func (m *MsgInitiateRecovery) String() string { return proto.CompactTextString(m) }
func (*MsgInitiateRecovery) ProtoMessage()    {}
func (*MsgInitiateRecovery) Descriptor() ([]byte, []int) {
	return fileDescriptor_981d47066cbe0878, []int{1}
}
func (m *MsgInitiateRecovery) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitiateRecovery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitiateRecovery.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitiateRecovery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitiateRecovery.Merge(m, src)
}
func (m *MsgInitiateRecovery) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitiateRecovery) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitiateRecovery.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitiateRecovery proto.InternalMessageInfo

func (m *MsgInitiateRecovery) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgInitiateRecovery) GetSocialProvider() string {
	if m != nil {
		return m.SocialProvider
	}
	return ""
}

func (m *MsgInitiateRecovery) GetOauthToken() string {
	if m != nil {
		return m.OauthToken
	}
	return ""
}

// MsgCompleteRecovery represents the message to complete wallet recovery
type MsgCompleteRecovery struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	MfaCode   string `protobuf:"bytes,3,opt,name=mfa_code,json=mfaCode,proto3" json:"mfa_code,omitempty"`
}

func (m *MsgCompleteRecovery) Reset()         { *m = MsgCompleteRecovery{} }
func (m *MsgCompleteRecovery) String() string { return proto.CompactTextString(m) }
func (*MsgCompleteRecovery) ProtoMessage()    {}
func (*MsgCompleteRecovery) Descriptor() ([]byte, []int) {
	return fileDescriptor_981d47066cbe0878, []int{2}
}
func (m *MsgCompleteRecovery) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCompleteRecovery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCompleteRecovery.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCompleteRecovery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCompleteRecovery.Merge(m, src)
}
func (m *MsgCompleteRecovery) XXX_Size() int {
	return m.Size()
}
func (m *MsgCompleteRecovery) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCompleteRecovery.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCompleteRecovery proto.InternalMessageInfo

func (m *MsgCompleteRecovery) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCompleteRecovery) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *MsgCompleteRecovery) GetMfaCode() string {
	if m != nil {
		return m.MfaCode
	}
	return ""
}

func init() {
	proto.RegisterType((*RecoverySession)(nil), "selfchain.identity.RecoverySession")
	proto.RegisterType((*MsgInitiateRecovery)(nil), "selfchain.identity.MsgInitiateRecovery")
	proto.RegisterType((*MsgCompleteRecovery)(nil), "selfchain.identity.MsgCompleteRecovery")
}

func init() { proto.RegisterFile("selfchain/identity/recovery.proto", fileDescriptor_981d47066cbe0878) }

var fileDescriptor_981d47066cbe0878 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x9b, 0x0c, 0xd6, 0xe4, 0xb5, 0x6c, 0xc3, 0x70, 0x08, 0x45, 0xa4, 0x5d, 0x39, 0x50,
	0x09, 0x29, 0x91, 0x80, 0x2f, 0xb0, 0x95, 0x4b, 0x0f, 0x48, 0x28, 0x4c, 0x1c, 0xb8, 0x44, 0x5e,
	0xfc, 0x92, 0x59, 0x34, 0x71, 0x14, 0x7b, 0xd5, 0xfa, 0x2d, 0xf6, 0xb1, 0x76, 0xdc, 0x91, 0x13,
	0xa0, 0xf6, 0x4b, 0x70, 0x44, 0x71, 0xec, 0xf6, 0xb2, 0x03, 0xdc, 0xec, 0xff, 0xfb, 0xf9, 0x3d,
	0xf9, 0xff, 0xfe, 0x70, 0x2a, 0x71, 0x99, 0x67, 0x57, 0x94, 0x57, 0x31, 0x67, 0x58, 0x29, 0xae,
	0xd6, 0x71, 0x83, 0x99, 0x58, 0x61, 0xb3, 0x8e, 0xea, 0x46, 0x28, 0x41, 0xc8, 0x0e, 0x89, 0x2c,
	0x32, 0x7a, 0x5e, 0x88, 0x42, 0xe8, 0x72, 0xdc, 0x9e, 0x3a, 0x72, 0x34, 0x2e, 0x84, 0x28, 0x96,
	0x18, 0xeb, 0xdb, 0xe5, 0x75, 0x1e, 0x2b, 0x5e, 0xa2, 0x54, 0xb4, 0xac, 0x3b, 0x60, 0xfa, 0xc7,
	0x85, 0xe3, 0xc4, 0x74, 0xff, 0x82, 0x52, 0x72, 0x51, 0x91, 0x23, 0x70, 0x39, 0x0b, 0x9c, 0x89,
	0x33, 0xf3, 0x13, 0x97, 0x33, 0x72, 0x02, 0x07, 0x8c, 0xb3, 0xc0, 0xd5, 0x42, 0x7b, 0x24, 0x6f,
	0xe0, 0x58, 0x8a, 0x8c, 0xd3, 0x65, 0x5a, 0x37, 0x62, 0xc5, 0x19, 0x36, 0xc1, 0x81, 0xae, 0x1e,
	0x75, 0xf2, 0x67, 0xa3, 0x92, 0x97, 0xe0, 0x1b, 0x90, 0xb3, 0xe0, 0x91, 0x46, 0xbc, 0x4e, 0x58,
	0x30, 0x72, 0x0a, 0xc3, 0x32, 0xa7, 0xe9, 0x0a, 0x1b, 0x9e, 0x73, 0x64, 0xc1, 0xe3, 0x89, 0x33,
	0xf3, 0x92, 0x41, 0x99, 0xd3, 0xaf, 0x46, 0x22, 0x6f, 0xe1, 0xa9, 0xfd, 0xe1, 0x9e, 0x3b, 0xd4,
	0xdc, 0x89, 0x2d, 0xec, 0xe0, 0xd7, 0xf0, 0xc4, 0x1a, 0x95, 0x32, 0xaa, 0x68, 0xd0, 0x9f, 0x38,
	0xb3, 0x61, 0x32, 0xb4, 0xe2, 0x47, 0xaa, 0x28, 0x99, 0x03, 0xe0, 0x4d, 0xcd, 0x1b, 0x94, 0x29,
	0x55, 0x81, 0x37, 0x71, 0x66, 0x83, 0x77, 0xa3, 0xa8, 0xb3, 0x29, 0xb2, 0x36, 0x45, 0x17, 0xd6,
	0xa6, 0x73, 0xef, 0xee, 0xe7, 0xb8, 0x77, 0xfb, 0x6b, 0xec, 0x24, 0xbe, 0x79, 0x77, 0xa6, 0xda,
	0x26, 0x59, 0x83, 0x54, 0x21, 0x6b, 0x9b, 0xf8, 0xff, 0xd3, 0xc4, 0xbc, 0x3b, 0x53, 0xd3, 0x35,
	0x3c, 0xfb, 0x24, 0x8b, 0x45, 0xc5, 0x15, 0xa7, 0x0a, 0xed, 0x12, 0x48, 0x00, 0x7d, 0xcd, 0x88,
	0xc6, 0xac, 0xc0, 0x5e, 0x1f, 0x72, 0xdd, 0x7d, 0xd0, 0xf5, 0x31, 0x0c, 0x04, 0xbd, 0x56, 0x57,
	0xa9, 0x12, 0xdf, 0xb1, 0x32, 0xab, 0x01, 0x2d, 0x5d, 0xb4, 0xca, 0x94, 0xeb, 0xd1, 0x73, 0x51,
	0xd6, 0x4b, 0xfc, 0xa7, 0xd1, 0xaf, 0x00, 0x64, 0x97, 0x8e, 0x74, 0x97, 0x04, 0xdf, 0x28, 0x0b,
	0x46, 0x5e, 0x80, 0xd7, 0x6e, 0x32, 0x13, 0x0c, 0xcd, 0xb4, 0x7e, 0x99, 0xd3, 0xb9, 0x60, 0x78,
	0xfe, 0xe1, 0x6e, 0x13, 0x3a, 0xf7, 0x9b, 0xd0, 0xf9, 0xbd, 0x09, 0x9d, 0xdb, 0x6d, 0xd8, 0xbb,
	0xdf, 0x86, 0xbd, 0x1f, 0xdb, 0xb0, 0xf7, 0x6d, 0xb4, 0x0f, 0xfa, 0xcd, 0x3e, 0xea, 0x6a, 0x5d,
	0xa3, 0xbc, 0x3c, 0xd4, 0x26, 0xbe, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x51, 0xf9, 0xc9, 0xee,
	0x0d, 0x03, 0x00, 0x00,
}

func (m *RecoverySession) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RecoverySession) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RecoverySession) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.CreatedAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CreatedAt):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintRecovery(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x4a
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.ExpiresAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.ExpiresAt):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintRecovery(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x42
	if len(m.RecoveryData) > 0 {
		i -= len(m.RecoveryData)
		copy(dAtA[i:], m.RecoveryData)
		i = encodeVarintRecovery(dAtA, i, uint64(len(m.RecoveryData)))
		i--
		dAtA[i] = 0x3a
	}
	if m.IdentityVerified {
		i--
		if m.IdentityVerified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.MfaVerified {
		i--
		if m.MfaVerified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.SocialId) > 0 {
		i -= len(m.SocialId)
		copy(dAtA[i:], m.SocialId)
		i = encodeVarintRecovery(dAtA, i, uint64(len(m.SocialId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.SocialProvider) > 0 {
		i -= len(m.SocialProvider)
		copy(dAtA[i:], m.SocialProvider)
		i = encodeVarintRecovery(dAtA, i, uint64(len(m.SocialProvider)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintRecovery(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintRecovery(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInitiateRecovery) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitiateRecovery) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitiateRecovery) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OauthToken) > 0 {
		i -= len(m.OauthToken)
		copy(dAtA[i:], m.OauthToken)
		i = encodeVarintRecovery(dAtA, i, uint64(len(m.OauthToken)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SocialProvider) > 0 {
		i -= len(m.SocialProvider)
		copy(dAtA[i:], m.SocialProvider)
		i = encodeVarintRecovery(dAtA, i, uint64(len(m.SocialProvider)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintRecovery(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCompleteRecovery) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCompleteRecovery) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCompleteRecovery) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MfaCode) > 0 {
		i -= len(m.MfaCode)
		copy(dAtA[i:], m.MfaCode)
		i = encodeVarintRecovery(dAtA, i, uint64(len(m.MfaCode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SessionId) > 0 {
		i -= len(m.SessionId)
		copy(dAtA[i:], m.SessionId)
		i = encodeVarintRecovery(dAtA, i, uint64(len(m.SessionId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintRecovery(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintRecovery(dAtA []byte, offset int, v uint64) int {
	offset -= sovRecovery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *RecoverySession) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovRecovery(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovRecovery(uint64(l))
	}
	l = len(m.SocialProvider)
	if l > 0 {
		n += 1 + l + sovRecovery(uint64(l))
	}
	l = len(m.SocialId)
	if l > 0 {
		n += 1 + l + sovRecovery(uint64(l))
	}
	if m.MfaVerified {
		n += 2
	}
	if m.IdentityVerified {
		n += 2
	}
	l = len(m.RecoveryData)
	if l > 0 {
		n += 1 + l + sovRecovery(uint64(l))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.ExpiresAt)
	n += 1 + l + sovRecovery(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovRecovery(uint64(l))
	return n
}

func (m *MsgInitiateRecovery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovRecovery(uint64(l))
	}
	l = len(m.SocialProvider)
	if l > 0 {
		n += 1 + l + sovRecovery(uint64(l))
	}
	l = len(m.OauthToken)
	if l > 0 {
		n += 1 + l + sovRecovery(uint64(l))
	}
	return n
}

func (m *MsgCompleteRecovery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovRecovery(uint64(l))
	}
	l = len(m.SessionId)
	if l > 0 {
		n += 1 + l + sovRecovery(uint64(l))
	}
	l = len(m.MfaCode)
	if l > 0 {
		n += 1 + l + sovRecovery(uint64(l))
	}
	return n
}

func sovRecovery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRecovery(x uint64) (n int) {
	return sovRecovery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RecoverySession) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRecovery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RecoverySession: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RecoverySession: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecovery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecovery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecovery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecovery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SocialProvider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecovery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecovery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SocialProvider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SocialId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecovery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecovery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SocialId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MfaVerified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MfaVerified = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentityVerified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IdentityVerified = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecoveryData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRecovery
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRecovery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecoveryData = append(m.RecoveryData[:0], dAtA[iNdEx:postIndex]...)
			if m.RecoveryData == nil {
				m.RecoveryData = []byte{}
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRecovery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRecovery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.ExpiresAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRecovery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRecovery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRecovery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRecovery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitiateRecovery) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRecovery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitiateRecovery: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitiateRecovery: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecovery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecovery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SocialProvider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecovery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecovery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SocialProvider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OauthToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecovery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecovery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OauthToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRecovery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRecovery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCompleteRecovery) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRecovery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCompleteRecovery: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCompleteRecovery: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecovery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecovery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecovery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecovery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MfaCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRecovery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRecovery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MfaCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRecovery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRecovery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRecovery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRecovery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRecovery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRecovery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRecovery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRecovery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRecovery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRecovery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRecovery = fmt.Errorf("proto: unexpected end of group")
)
