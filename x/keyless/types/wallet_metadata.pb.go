// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: selfchain/keyless/wallet_metadata.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// WalletMetadata represents metadata for a wallet
type WalletMetadata struct {
	ChainId       string        `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	SecurityLevel SecurityLevel `protobuf:"varint,2,opt,name=security_level,json=securityLevel,proto3,enum=selfchain.keyless.SecurityLevel" json:"security_level,omitempty"`
	CreatedAt     *time.Time    `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty"`
	LastRotated   *time.Time    `protobuf:"bytes,4,opt,name=last_rotated,json=lastRotated,proto3,stdtime" json:"last_rotated,omitempty"`
	LastUsed      *time.Time    `protobuf:"bytes,5,opt,name=last_used,json=lastUsed,proto3,stdtime" json:"last_used,omitempty"`
	UsageCount    uint64        `protobuf:"varint,6,opt,name=usage_count,json=usageCount,proto3" json:"usage_count,omitempty"`
	BackupStatus  BackupStatus  `protobuf:"varint,7,opt,name=backup_status,json=backupStatus,proto3,enum=selfchain.keyless.BackupStatus" json:"backup_status,omitempty"`
}

func (m *WalletMetadata) Reset()         { *m = WalletMetadata{} }
func (m *WalletMetadata) String() string { return proto.CompactTextString(m) }
func (*WalletMetadata) ProtoMessage()    {}
func (*WalletMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_00851133fd67970b, []int{0}
}
func (m *WalletMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WalletMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WalletMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WalletMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletMetadata.Merge(m, src)
}
func (m *WalletMetadata) XXX_Size() int {
	return m.Size()
}
func (m *WalletMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_WalletMetadata proto.InternalMessageInfo

func (m *WalletMetadata) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *WalletMetadata) GetSecurityLevel() SecurityLevel {
	if m != nil {
		return m.SecurityLevel
	}
	return SecurityLevel_SECURITY_LEVEL_UNSPECIFIED
}

func (m *WalletMetadata) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *WalletMetadata) GetLastRotated() *time.Time {
	if m != nil {
		return m.LastRotated
	}
	return nil
}

func (m *WalletMetadata) GetLastUsed() *time.Time {
	if m != nil {
		return m.LastUsed
	}
	return nil
}

func (m *WalletMetadata) GetUsageCount() uint64 {
	if m != nil {
		return m.UsageCount
	}
	return 0
}

func (m *WalletMetadata) GetBackupStatus() BackupStatus {
	if m != nil {
		return m.BackupStatus
	}
	return BackupStatus_BACKUP_STATUS_UNSPECIFIED
}

func init() {
	proto.RegisterType((*WalletMetadata)(nil), "selfchain.keyless.WalletMetadata")
}

func init() {
	proto.RegisterFile("selfchain/keyless/wallet_metadata.proto", fileDescriptor_00851133fd67970b)
}

var fileDescriptor_00851133fd67970b = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x4d, 0xef, 0xd2, 0x40,
	0x10, 0xc6, 0x59, 0xff, 0xc8, 0xcb, 0xf2, 0x92, 0xb8, 0xf1, 0x50, 0x38, 0xb4, 0x8d, 0x17, 0x7b,
	0x6a, 0x13, 0x38, 0x1b, 0x23, 0x98, 0x18, 0x13, 0xbd, 0x14, 0x8d, 0x89, 0x97, 0x66, 0xdb, 0x0e,
	0xb5, 0x61, 0x61, 0x9b, 0xee, 0x54, 0xed, 0xb7, 0xe0, 0x23, 0xf8, 0x71, 0x3c, 0x72, 0xf4, 0xa6,
	0x81, 0x2f, 0x62, 0xba, 0x2d, 0x48, 0x82, 0x07, 0x6e, 0x7d, 0x66, 0x7f, 0xcf, 0xf4, 0x99, 0x19,
	0xfa, 0x5c, 0x81, 0x58, 0x47, 0x5f, 0x78, 0xba, 0xf3, 0x36, 0x50, 0x0a, 0x50, 0xca, 0xfb, 0xc6,
	0x85, 0x00, 0x0c, 0xb6, 0x80, 0x3c, 0xe6, 0xc8, 0xdd, 0x2c, 0x97, 0x28, 0xd9, 0x93, 0x0b, 0xe8,
	0x36, 0xe0, 0xf4, 0x69, 0x22, 0x13, 0xa9, 0x5f, 0xbd, 0xea, 0xab, 0x06, 0xa7, 0x56, 0x22, 0x65,
	0x22, 0xc0, 0xd3, 0x2a, 0x2c, 0xd6, 0x1e, 0xa6, 0x5b, 0x50, 0xc8, 0xb7, 0x59, 0x03, 0x98, 0xb7,
	0xbf, 0xdc, 0x40, 0x99, 0xc0, 0xae, 0x7e, 0x7f, 0xf6, 0xe3, 0x81, 0x8e, 0x3f, 0xe9, 0x0c, 0xef,
	0x9b, 0x08, 0x6c, 0x42, 0x7b, 0xda, 0x10, 0xa4, 0xb1, 0x41, 0x6c, 0xe2, 0xf4, 0xfd, 0xae, 0xd6,
	0x6f, 0x63, 0xf6, 0x86, 0x8e, 0x15, 0x44, 0x45, 0x9e, 0x62, 0x19, 0x08, 0xf8, 0x0a, 0xc2, 0x78,
	0x64, 0x13, 0x67, 0x3c, 0xb3, 0xdd, 0x9b, 0xc0, 0xee, 0xaa, 0x01, 0xdf, 0x55, 0x9c, 0x3f, 0x52,
	0xd7, 0x92, 0xbd, 0xa4, 0x34, 0xca, 0x81, 0x23, 0xc4, 0x01, 0x47, 0xe3, 0xc1, 0x26, 0xce, 0x60,
	0x36, 0x75, 0xeb, 0x61, 0xdc, 0xf3, 0x30, 0xee, 0x87, 0xf3, 0x30, 0x8b, 0xf6, 0xfe, 0xb7, 0x45,
	0xfc, 0x7e, 0xe3, 0x79, 0x85, 0x6c, 0x49, 0x87, 0x82, 0x2b, 0x0c, 0x72, 0x89, 0x55, 0xc5, 0x68,
	0xdf, 0xd9, 0x62, 0x50, 0xb9, 0xfc, 0xda, 0xc4, 0x5e, 0xd0, 0xbe, 0x6e, 0x52, 0x28, 0x88, 0x8d,
	0xc7, 0x77, 0x76, 0xe8, 0x55, 0x96, 0x8f, 0x0a, 0x62, 0x66, 0xd1, 0x41, 0xa1, 0x78, 0x02, 0x41,
	0x24, 0x8b, 0x1d, 0x1a, 0x1d, 0x9b, 0x38, 0x6d, 0x9f, 0xea, 0xd2, 0xb2, 0xaa, 0xb0, 0xd7, 0x74,
	0x14, 0xf2, 0x68, 0x53, 0x64, 0x81, 0x42, 0x8e, 0x85, 0x32, 0xba, 0x7a, 0x5b, 0xd6, 0x7f, 0xb6,
	0xb5, 0xd0, 0xdc, 0x4a, 0x63, 0xfe, 0x30, 0xbc, 0x52, 0x8b, 0xf9, 0xcf, 0xa3, 0x49, 0x0e, 0x47,
	0x93, 0xfc, 0x39, 0x9a, 0x64, 0x7f, 0x32, 0x5b, 0x87, 0x93, 0xd9, 0xfa, 0x75, 0x32, 0x5b, 0x9f,
	0x27, 0xff, 0x8e, 0xfb, 0xfd, 0x72, 0x5e, 0x2c, 0x33, 0x50, 0x61, 0x47, 0xe7, 0x9f, 0xff, 0x0d,
	0x00, 0x00, 0xff, 0xff, 0x21, 0x77, 0x7a, 0xd4, 0x73, 0x02, 0x00, 0x00,
}

func (m *WalletMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WalletMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WalletMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BackupStatus != 0 {
		i = encodeVarintWalletMetadata(dAtA, i, uint64(m.BackupStatus))
		i--
		dAtA[i] = 0x38
	}
	if m.UsageCount != 0 {
		i = encodeVarintWalletMetadata(dAtA, i, uint64(m.UsageCount))
		i--
		dAtA[i] = 0x30
	}
	if m.LastUsed != nil {
		n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.LastUsed, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.LastUsed):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintWalletMetadata(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x2a
	}
	if m.LastRotated != nil {
		n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.LastRotated, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.LastRotated):])
		if err2 != nil {
			return 0, err2
		}
		i -= n2
		i = encodeVarintWalletMetadata(dAtA, i, uint64(n2))
		i--
		dAtA[i] = 0x22
	}
	if m.CreatedAt != nil {
		n3, err3 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.CreatedAt):])
		if err3 != nil {
			return 0, err3
		}
		i -= n3
		i = encodeVarintWalletMetadata(dAtA, i, uint64(n3))
		i--
		dAtA[i] = 0x1a
	}
	if m.SecurityLevel != 0 {
		i = encodeVarintWalletMetadata(dAtA, i, uint64(m.SecurityLevel))
		i--
		dAtA[i] = 0x10
	}
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintWalletMetadata(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintWalletMetadata(dAtA []byte, offset int, v uint64) int {
	offset -= sovWalletMetadata(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *WalletMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovWalletMetadata(uint64(l))
	}
	if m.SecurityLevel != 0 {
		n += 1 + sovWalletMetadata(uint64(m.SecurityLevel))
	}
	if m.CreatedAt != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovWalletMetadata(uint64(l))
	}
	if m.LastRotated != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.LastRotated)
		n += 1 + l + sovWalletMetadata(uint64(l))
	}
	if m.LastUsed != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.LastUsed)
		n += 1 + l + sovWalletMetadata(uint64(l))
	}
	if m.UsageCount != 0 {
		n += 1 + sovWalletMetadata(uint64(m.UsageCount))
	}
	if m.BackupStatus != 0 {
		n += 1 + sovWalletMetadata(uint64(m.BackupStatus))
	}
	return n
}

func sovWalletMetadata(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozWalletMetadata(x uint64) (n int) {
	return sovWalletMetadata(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *WalletMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWalletMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WalletMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WalletMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalletMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWalletMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWalletMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecurityLevel", wireType)
			}
			m.SecurityLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalletMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SecurityLevel |= SecurityLevel(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalletMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWalletMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWalletMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastRotated", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalletMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWalletMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWalletMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LastRotated == nil {
				m.LastRotated = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.LastRotated, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUsed", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalletMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWalletMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWalletMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LastUsed == nil {
				m.LastUsed = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.LastUsed, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UsageCount", wireType)
			}
			m.UsageCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalletMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UsageCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BackupStatus", wireType)
			}
			m.BackupStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalletMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BackupStatus |= BackupStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipWalletMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWalletMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipWalletMetadata(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowWalletMetadata
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWalletMetadata
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWalletMetadata
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthWalletMetadata
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupWalletMetadata
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthWalletMetadata
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthWalletMetadata        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowWalletMetadata          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupWalletMetadata = fmt.Errorf("proto: unexpected end of group")
)
